<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[深入理解css 行高]]></title>
      <url>/2017/08/18/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3css%E8%A1%8C%E9%AB%98/</url>
      <content type="html"><![CDATA[<p>最近几天在学习 CSS 基础知识，一直被 line-height, inline-block, vertical-align折磨，搜了一下这方面资料，不搜不知道一搜吓一跳，实际上这块还是值得好好研究一下的，据说line-height 和 vertical-align 这两个属性算得上是 CSS 里最难的两个属性了。这篇文章算做一个记录吧。<br><a id="more"></a><br>既然是 CSS 中比较难的属性，总要有个切入点吧，思来想去觉得还是从 W3C 中关于 line-height 的定义说起吧：</p>
<blockquote>
<p>line-height 属性设置行间的距离（行高）。不允许使用负值。<br>该属性会影响行框的布局。在应用到一个块级元素时，它定义了该元素中基线之间的最小距离而不是最大距离。<br>line-height 与 font-size 的计算值之差（在 CSS 中成为“行间距”）分为两半，分别加到一个文本内容的顶部和底部。可以包含这些内容的最小框就是行框。</p>
</blockquote>
<p>刚看到这段话时我是费解的，这里面有太多知识点了，涉及到 行高，行框，基线，font-size，行间距等概念，有必要细说从头，先总结一下几个基本概念</p>
<h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h2><h3 id="x-height"><a href="#x-height" class="headerlink" title="x-height"></a>x-height</h3><p>在西文字体排印学中, x-height 就是指小写字母 ‘x’ 的高度；维基上有格示意图：<br><img src="http://oummu6kih.bkt.clouddn.com/inline_pic1.png"><br>按 <a href="http://www.zhangxinxu.com/wordpress/2015/06/about-letter-x-of-css/" target="_blank" rel="external">字母’x’在CSS世界中的角色和故事</a> 这篇文章作者的理解：</p>
<ul>
<li>ascender height: 上行线高度</li>
<li>cap height: 大写字母高度</li>
<li>median: 中线</li>
<li>descender height: 下行线高度</li>
</ul>
<p>x-height 即是基线和中线之间的距离。<br>而这里median 中线和 vertical-align: middle 又不是一个概念，middle 指的是基线往上 1/2 “x-height” 高度。可以近似为字母 “x” 交叉点的位置。<br>x 不仅衍生出了 x-height 的概念，还进一步衍生出了 ex，1ex 就是一个 x 的高度，类似 1em 就是一个大写字母 M 的宽度。</p>
<h3 id="基线，底线，顶线和中线"><a href="#基线，底线，顶线和中线" class="headerlink" title="基线，底线，顶线和中线"></a>基线，底线，顶线和中线</h3><p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic2.png"></p>
<ul>
<li>顶线(top line): 蓝线</li>
<li>中线(middle line): 黄线</li>
<li>基线(base line): 绿线</li>
<li>底线(bottom line): 红线</li>
</ul>
<p>vertical-align 属性中 top, middle, baseline, bottom 就是和这四条线相关。</p>
<h3 id="内容区"><a href="#内容区" class="headerlink" title="内容区"></a>内容区</h3><p>内容区(content-area)： 底线和顶线包裹的区域(行内元素可以通过 background-color属性显示出来)，内容区的大小依据 font-size 的值和字数进行变化。</p>
<p><strong>这里要说明一下，这个所谓的内容区，通过查找一些资料结合我的理解，其实就是后面要提到的四个CSS boxes 中的一个： content-area</strong></p>
<h3 id="行高，行距与半行距"><a href="#行高，行距与半行距" class="headerlink" title="行高，行距与半行距"></a>行高，行距与半行距</h3><p>行高(line-height):包括内容区与以内容区为基础对称拓展的空白区域，一般情况下，也可以认为是上下文本行的基线间的垂直距离，即图中两条绿线间垂直距离。</p>
<p>行距(leading)：是指一行底线到下一行顶线的垂直距离，即第一行红线和第二行蓝线间的垂直距离。<br>我认为一篇已经被转载烂的博文  深入理解 CSS 中的行高与基线 (原文我已经找不到了） 上的说法更准确一些： (上文本行行高 - 内容区高度)/2 + (下文本行行高 - 内容区高度)/2。</p>
<p>半行距是行距的一半，即区域3垂直距离/2，区域1，2，3，4的距离之和为行高，而区域1，2，4距离之和为字体size，所以半行距也可以这么算：（行高-字体size）/2</p>
<h3 id="行内框和行框"><a href="#行内框和行框" class="headerlink" title="行内框和行框"></a>行内框和行框</h3><p>行内框（inline box），每个行内元素会生成一个行内框，行内框是一个浏览器渲染模型中的一个概念，无法显示出来，在没有其他因素影响的时候（padding等），行内框等于内容区域，而设定行高时行内框高度不变，半行距【（行高-字体size）/2】分别增加/减少到内容区域的上下两边（深蓝色区域）</p>
<p>行框（line box），行框是指本行的一个虚拟的矩形框，也是浏览器渲染模式中的一个概念，并没有实际显示。行框高度等于本行内所有元素中行内框最大的值（以行高值最大的行内框为基准，其他行内框采用自己的对齐方式向基准对齐，最终计算行框的高度），当有多行内容时，每行都会有自己的行框。</p>
<p>这几个基本概念理解之后，再来看 line-height 的定义就清晰多了，line-height 即是行高。</p>
<h2 id="2-line-height"><a href="#2-line-height" class="headerlink" title="2. line-height"></a>2. line-height</h2><p>这里借鉴两篇PPT博文：<strong> line-height </strong> 和 <strong> deep-dive-line-height </strong>，网上有提供pdf版资源的下载，其中第一篇有中文版翻译：<a href="http://www.cnblogs.com/fengzheng126/archive/2012/05/18/2507632.html" target="_blank" rel="external">深入了解css的行高Line Height属性</a>。</p>
<p><strong>注意：</strong> 在这篇ppt中，有一个概念叫行间距，line-height 被理解为用来控制行与行之间的垂直距离，行间距与半行间距，取决于CSS中的line-height。</p>
<h3 id="line-height-语法"><a href="#line-height-语法" class="headerlink" title="line-height 语法"></a>line-height 语法</h3><p>5种方式定义line-height</p>
<ol>
<li>默认形式normal，不同浏览器值为1.0 - 1.2之间:  body { line-height: normal; }</li>
<li>继承父类形式 inherit: body { line-height: inherit; }</li>
<li>百分比形式%：body { line-height: 120%; }</li>
<li>长度值形式：body { line-height: 20px; }</li>
<li>纯数字形式：body { line-height: 1; }</li>
</ol>
<h3 id="line-height-继承"><a href="#line-height-继承" class="headerlink" title="line-height 继承"></a>line-height 继承</h3><p>line-height 的继承比较复杂，需要分不同方式计算得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;h1&gt;</div><div class="line">	consect etuer adipi scing elitsed diam nonummy</div><div class="line">&lt;/h1&gt;</div><div class="line">&lt;p&gt;</div><div class="line">	Lorem ipsum dolor sit amet consect etuer adipi scing elit seddiam nonummy nibh enismod tinunt ut laoreet dolore magna aliquam erat volut. Ut wisi enim ad minim veniam</div><div class="line">&lt;/p&gt;</div><div class="line">&lt;div id=&quot;footer&quot;&gt;</div><div class="line">	Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros.</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h4 id="百分比"><a href="#百分比" class="headerlink" title="百分比"></a>百分比</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">	font-size: 16px;</div><div class="line">	line-height: 100%;</div><div class="line">&#125;</div><div class="line">h1 &#123; font-size: 32px; &#125;</div><div class="line">p &#123; font-size: 16px; &#125;</div><div class="line">#footer &#123; font-size: 12px; &#125;</div></pre></td></tr></table></figure>
<p>当 line-height 为百分比时，所有继承下来的元素会忽略本身的 font-size，而使用相同的计算来的 line-height</p>
<table>
<thead>
<tr>
<th style="text-align:center">element</th>
<th style="text-align:center">font-size</th>
<th style="text-align:center">line-height</th>
<th style="text-align:center">计算后的 line-height</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">body</td>
<td style="text-align:center">16px</td>
<td style="text-align:center">120%</td>
<td style="text-align:center">16px * 120% = 19.2px</td>
</tr>
<tr>
<td style="text-align:center">h1</td>
<td style="text-align:center">32px</td>
<td style="text-align:center">继承计算后的值 - 19.2px</td>
<td style="text-align:center">19.2px</td>
</tr>
<tr>
<td style="text-align:center">p</td>
<td style="text-align:center">16px</td>
<td style="text-align:center">继承计算后的值 - 19.2px</td>
<td style="text-align:center">19.2px</td>
</tr>
<tr>
<td style="text-align:center">#footer</td>
<td style="text-align:center">12px</td>
<td style="text-align:center">继承计算后的值 - 19.2px</td>
<td style="text-align:center">19.2px</td>
</tr>
</tbody>
</table>
<h4 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">	font-size: 16px;</div><div class="line">	line-height: 20px;</div><div class="line">&#125;</div><div class="line">h1 &#123; font-size: 32px; &#125;</div><div class="line">p &#123; font-size: 16px; &#125;</div><div class="line">#footer &#123; font-size: 12px; &#125;</div></pre></td></tr></table></figure>
<p>当 line-height 为长度值时，所有继承下来的元素会忽略本身的 font-size，而使用相同的继承来的 line-height</p>
<table>
<thead>
<tr>
<th style="text-align:center">element</th>
<th style="text-align:center">font-size</th>
<th style="text-align:center">line-height</th>
<th style="text-align:center">计算后的 line-height</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">body</td>
<td style="text-align:center">16px</td>
<td style="text-align:center">20px</td>
<td style="text-align:center">20px</td>
</tr>
<tr>
<td style="text-align:center">h1</td>
<td style="text-align:center">32px</td>
<td style="text-align:center">继承的值 - 20px</td>
<td style="text-align:center">20px</td>
</tr>
<tr>
<td style="text-align:center">p</td>
<td style="text-align:center">16px</td>
<td style="text-align:center">继承的值 - 20px</td>
<td style="text-align:center">20px</td>
</tr>
<tr>
<td style="text-align:center">#footer</td>
<td style="text-align:center">12px</td>
<td style="text-align:center">继承的值 - 20px</td>
<td style="text-align:center">20px</td>
</tr>
</tbody>
</table>
<h4 id="normal"><a href="#normal" class="headerlink" title="normal"></a>normal</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">	font-size: 16px;</div><div class="line">	line-height: normal;</div><div class="line">&#125;</div><div class="line">h1 &#123; font-size: 32px; &#125;</div><div class="line">p &#123; font-size: 16px; &#125;</div><div class="line">#footer &#123; font-size: 12px; &#125;</div></pre></td></tr></table></figure>
<p>当 line-height 为 normal 时，所有继承下来的元素不会忽略本身的 font-size，而使用基于 font-size 计算出来的 line-height,而normal 的值根据浏览器的不同会有细微的差别</p>
<table>
<thead>
<tr>
<th style="text-align:center">element</th>
<th style="text-align:center">font-size</th>
<th style="text-align:center">line-height</th>
<th style="text-align:center">计算后的 line-height</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">body</td>
<td style="text-align:center">16px</td>
<td style="text-align:center">normal</td>
<td style="text-align:center">16px * 约1.2 = 约19.2px</td>
</tr>
<tr>
<td style="text-align:center">h1</td>
<td style="text-align:center">32px</td>
<td style="text-align:center">normal</td>
<td style="text-align:center">32px * 约1.2 = 约38.4px</td>
</tr>
<tr>
<td style="text-align:center">p</td>
<td style="text-align:center">16px</td>
<td style="text-align:center">normal</td>
<td style="text-align:center">16px * 约1.2 = 约19.2px</td>
</tr>
<tr>
<td style="text-align:center">#footer</td>
<td style="text-align:center">12px</td>
<td style="text-align:center">normal</td>
<td style="text-align:center">12px * 约1.2 = 约13.44px</td>
</tr>
</tbody>
</table>
<h4 id="纯数字"><a href="#纯数字" class="headerlink" title="纯数字"></a>纯数字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">	font-size: 16px;</div><div class="line">	line-height: 1.5;</div><div class="line">&#125;</div><div class="line">h1 &#123; font-size: 32px; &#125;</div><div class="line">p &#123; font-size: 16px; &#125;</div><div class="line">#footer &#123; font-size: 12px; &#125;</div></pre></td></tr></table></figure>
<p>当 line-height 为纯数字时，所有继承下来的元素不会忽略本身的 font-size，而使用基于 font-size 计算出来的 line-height</p>
<table>
<thead>
<tr>
<th style="text-align:center">element</th>
<th style="text-align:center">font-size</th>
<th style="text-align:center">line-height</th>
<th style="text-align:center">计算后的 line-height</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">body</td>
<td style="text-align:center">16px</td>
<td style="text-align:center">1.5</td>
<td style="text-align:center">16px * 1.5 = 24px</td>
</tr>
<tr>
<td style="text-align:center">h1</td>
<td style="text-align:center">32px</td>
<td style="text-align:center">系数1.5</td>
<td style="text-align:center">32px * 1.5 = 48px</td>
</tr>
<tr>
<td style="text-align:center">p</td>
<td style="text-align:center">16px</td>
<td style="text-align:center">系数1.5</td>
<td style="text-align:center">16px * 1.5 = 24px</td>
</tr>
<tr>
<td style="text-align:center">#footer</td>
<td style="text-align:center">12px</td>
<td style="text-align:center">系数1.5</td>
<td style="text-align:center">12px * 1.5 = 18px</td>
</tr>
</tbody>
</table>
<h3 id="CSS-boxes-类型"><a href="#CSS-boxes-类型" class="headerlink" title="CSS boxes 类型"></a>CSS boxes 类型</h3><p>先从一段代码开始<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;</div><div class="line">	Lorem ipsum &lt;i&gt;dolor sit amet&lt;/i&gt;, consectetuer adipiscing elit. Voluptate incidunt in quo autem veritatis ea a similique dolores, perspiciatis, deserunt saepe corporis magni unde.</div><div class="line">&lt;/p&gt;</div></pre></td></tr></table></figure></p>
<p>这个例子中涉及到4种 boxes:</p>
<h3 id="containing-boxes"><a href="#containing-boxes" class="headerlink" title="containing boxes"></a>containing boxes</h3><p>段落就是一种 containing box,它包含了其他的boxes<br><strong> 也可以叫做 block box, 貌似这个更贴切 </strong></p>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic5.png"></p>
<h3 id="inline-boxes"><a href="#inline-boxes" class="headerlink" title="inline boxes"></a>inline boxes</h3><p>在段落内，有一系列的 inline boxes,inline boxes 不会让内容显示成块而是排成一行。</p>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic6.png"></p>
<p>如果外部含inline属性的标签(span,a,cite等)，则属于inline boxes，如上图中的 emphasis元素就是一种 inline box;<br>如果没有特别标签的 box，则属于匿名inline boxes,如上图中另外两个为匿名 inline boxes;</p>
<h3 id="line-boxes-line-height"><a href="#line-boxes-line-height" class="headerlink" title="line boxes(line-height ?)"></a>line boxes(line-height ?)</h3><p>在containing boxes里，一个一个的inline boxes组成了line boxes。</p>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic9.png"></p>
<h3 id="content-area"><a href="#content-area" class="headerlink" title="content area"></a>content area</h3><p>content area 是一种围绕文字看不见的box。content area的大小与font-size大小相关。</p>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic10.png"></p>
<p>以上是 CSS 中四种 boxes，其中 line-box 的高度是由它所有子元素的高度计算得出的。浏览器会计算这一行里每个子元素的高度，再得出 line-box 的高度（具体来说就是从子元素的最高点到最低点的高度），所以默认情况下，一个 line-box 总是有足够的高度来容纳它的子元素。</p>
<p>** 四者关系：containing box &gt; line box &gt; inline box = line-height = top half-leading + content area + buttom half-leading</p>
<h3 id="line-height-与-inline-boxes"><a href="#line-height-与-inline-boxes" class="headerlink" title="line-height 与 inline boxes"></a>line-height 与 inline boxes</h3><p>line-height 分三步作用于 inline boxes 上：<br>step1. 计算出 line-height 和 font-size 的差值得到 leading,即是行间距. line-height - font-size = leading.<br>step2. 计算出半行间距. leading / 2 = half-leading.<br>step3. 半行间距分别添加到 content area 的顶部和底部.即得到 inline box.</p>
<p>一个例子：line-height 为 20px，font-size 为16px,<br>leading 为 20px - 16px = 4px<br>half-leading 为 4px / 2 = 2px</p>
<p>Top half-leading: 2px<br>Content area: 160x<br>Bottom half-leading: 2px<br>Total height: 20px</p>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic20.png"></p>
<p>然而有时候,如果 line-height 小于 font-size 就造成 inline box 小于 content area。<br>举个例子： line-height 为 12px, font-size 为16px，显示效果就会这个样子：<br>tu<br>当然，line-height 为0时：<br>图</p>
<p>因此利用 line-height 的这个属性设置单行文字的垂直居中也就很好理解了：<br>例如，想让一行 font-size 为16px 的文字在高为 200px 的父元素里垂直居中，只需要把 line-height 设为 200px即可：<br>图</p>
<h3 id="inline-boxes-与-line-boxes"><a href="#inline-boxes-与-line-boxes" class="headerlink" title="inline boxes 与 line boxes"></a>inline boxes 与 line boxes</h3><p><font style="color:red">情况一</font><br>line box 高度取决于它内部最高的 inline box(或被替换的元素,如：图片)</p>
<ol>
<li><p>最高的 inline box 可以是匿名 inline box</p>
</li>
<li><p>也可以是增大 line-height 后的 inline box</p>
</li>
<li><p>更大 font-size 的 inline box</p>
</li>
<li><p>存在上标或下标</p>
</li>
<li><p>可替换元素，如一张图片</p>
</li>
</ol>
<p>这两者之间的关系准确地说应该是：line box 的高度是由它所有子元素(inline boxes)的高度计算得出的。具体来说就是子元素的最高点到最低点的高度。<br>///////////////////////////////////////////////////////////////////////////////</p>
<p>到这里，有必要提一下 <a href="http://iamvdo.me/en/blog/css-font-metrics-line-height-and-vertical-align" target="_blank" rel="external">Deep dive CSS: font metrics, line-height and vertical-align - Vincent De Oliveira</a> 这篇文章了，国内也有译文，我认为知乎上这篇 <a href="https://zhuanlan.zhihu.com/p/25808995" target="_blank" rel="external">深入理解 CSS：字体度量、line-height 和 vertical-align</a> 翻译的更得我心，这里借鉴一下</p>
<h2 id="2-font-size"><a href="#2-font-size" class="headerlink" title="2. font-size"></a>2. font-size</h2><p>同样大小的字号，不同的字体显示出来的大小却是不一样的：<br><img src="http://oummu6kih.bkt.clouddn.com/inline_pic3.png"><br>原因就在于字体的原理，这里就不细说了，有兴趣的同学可直接查看上面的原文或者译文，总结起来就是，当我们设置 font-size:100px 时，这个字体里的文字高度是 164px(以Catamaran字体为例)。这个计算出来的高度决定了 HTML 元素的 content-area（内容区域），后面我会讲到 content-area。你可以认为 content-area 就是 background 作用的区域。</p>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic4.png"></p>
<p>我们还能看出大写字母的高度是 68px，小写字母的高度（x-height）是 49px。所以 1ex = 49px，1em = 100px，而不是 164px。（值得庆幸的是，em 是基于 font-size，而不是基于计算出来的高度）</p>
<h2 id="4-line-height"><a href="#4-line-height" class="headerlink" title="4.line-height"></a>4.line-height</h2><p>按照 <a href="https://zhuanlan.zhihu.com/p/25808995" target="_blank" rel="external">深入理解 CSS：字体度量、line-height 和 vertical-align</a> 译文说法：</p>
<blockquote>
<p>一个内联元素有两个高度：content-area 高度和 virtual-area （实际区域？）高度。<br>content-area 的高度是由字体度量定义的;<br>vitual-area 的高度就是 line-height，这个高度用于计算 line-box 的高度;</p>
</blockquote>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic11.png"></p>
<p>所以在这篇文章中 line-height 并不是表示两个基线之间的距离，</p>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic12.png"></p>
<p>virtual-area 和 content-area 高度的差异叫做 leading。leading 的一半会被加到 content-area 顶部，另一半会被加到底部。因此 content-area 总是处于 virtual-area 的中间。</p>
<p><strong> 一般认为leading = line-height - font-size，而在这篇文章中，virtual-area 的高度就是 line-height, content-area就是font-size.</strong></p>
<p>计算出来的 line-height（也就是 virtual-area 的高度）可以等于、大于或小于 content-area。如果 virtual-area 小于 content-area，那么 leading 就是负的，因此 line-box 看起来就比内容还矮了。</p>
<p>当 line-height 的值是一个数字时，其实就是相对 font-size 的倍数，而不是相对于 content-area。所以 line-height:1 很有可能使得 virtual-area 比 content-area 矮，从而引发很多其他的问题。</p>
<p><img src="http://oummu6kih.bkt.clouddn.com/inline_pic13.png"></p>
<p>line-box 计算的一些细节：</p>
<ul>
<li>对于内联元素，padding 和 border 会增大 background 区域，但是不会增大 content-area（不是 line-box 的高度）。一般来说你无法再屏幕上看到 content-area。margin-top 和 margin-bottom 对两者都没有影响。</li>
<li>对于可替换内联元素（replaced inline elements）、inline-block 元素和 blockified 内联元素，padding、margin 和 border 会增大 height（译者注：注意 margin），因此会影响 content-area 和 line-box 的高度</li>
</ul>
<h2 id="5-vertical-align"><a href="#5-vertical-align" class="headerlink" title="5.vertical-align"></a>5.vertical-align</h2><p>vertical-align也是计算 line-box 高度的重要因素之一。我们甚至可以说 vertical-align 是内联格式化上下文（IFC）中最重要的属性。默认值是 baseline,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    font-family: Catamaran;</div><div class="line">    font-size: 100px;</div><div class="line">    line-height: 200px;</div><div class="line">&#125;</div><div class="line">&lt;p&gt;</div><div class="line">    &lt;span&gt;Ba&lt;/span&gt;</div><div class="line">    &lt;span&gt;Ba&lt;/span&gt;</div><div class="line">&lt;/p&gt;</div></pre></td></tr></table></figure></p>
<p>这时两个 span 的 baseline 是等高的，line-box 的高度就是 span 的 line-height:<br><img src="http://oummu6kih.bkt.clouddn.com/inline_pic14.png"><br>这时，如果第二个 span 的 font-size 变小了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">span:last-child &#123;</div><div class="line">    font-size: 50px;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>我们会发现一个非常奇怪的现象，line-box 的高度变高了！<br><img src="http://oummu6kih.bkt.clouddn.com/inline_pic15.png"><br>另一个例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    line-height: 200px;</div><div class="line">&#125;</div><div class="line">span &#123;</div><div class="line">    font-family: Catamaran;</div><div class="line">    font-size: 100px;</div><div class="line">&#125;</div><div class="line">&lt;p&gt;</div><div class="line">    &lt;span&gt;Ba&lt;/span&gt;</div><div class="line">&lt;/p&gt;</div></pre></td></tr></table></figure></p>
<p>此时 line-box 的高度是多少？貌似是 200px，但其实不是。这里你没有考虑到的问题是 p 有自己的 font-family，默认值是 serif。p 的 baseline 和 span 的 baseline 位置不一样，因此最终的 line-box 比我们预想的要高一些。出现这种问题是因为浏览器认为每个 line-box 的起始位置都有一个宽度为 0 的字符（CSS 文档将其称为 strut），并将其纳入 line-box 的高度的计算中。<br><img src="http://oummu6kih.bkt.clouddn.com/inline_pic16.png"><br>顺便一说，vertical-align 的其他 4 个值有可能有点用：</p>
<ul>
<li>vertical-align: top / bottom，表示与 line-box 的顶部或底部对齐</li>
<li>vertical-align: text-top / text-bottom，表示与 content-area 的顶部或底部对齐<br><img src="http://oummu6kih.bkt.clouddn.com/inline_pic17.png"><br>不过你依然要小心，大部分情况下，对齐的是 virtual-area，也就是一个不可见的高度。看看下面这个用 vertical-align:top 的例子：<br><img src="http://oummu6kih.bkt.clouddn.com/inline_pic18.png"></li>
</ul>
<h2 id="6-参考资料"><a href="#6-参考资料" class="headerlink" title="6. 参考资料"></a>6. 参考资料</h2><ul>
<li><a href="http://www.w3cplus.com/css/css-font-metrics-line-height-and-vertical-align.html" target="_blank" rel="external">深入了解CSS字体度量，行高和vertical-align</a></li>
<li><a href="http://www.cnblogs.com/fengzheng126/archive/2012/05/18/2507632.html" target="_blank" rel="external">深入了解css的行高Line Height属性</a></li>
<li><a href="http://blog.csdn.net/q121516340/article/details/51483439" target="_blank" rel="external">深入理解 CSS 中的行高与基线</a></li>
<li><a href="http://www.cnblogs.com/dolphinX/p/3236686.html" target="_blank" rel="external">CSS行高——line-height</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/25808995" target="_blank" rel="external">深入理解 CSS：字体度量、line-height 和 vertical-align</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> HTML基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HTML 基础知识]]></title>
      <url>/2017/08/12/HTML-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      <content type="html"><![CDATA[<blockquote>
<p><em>先说一个比较容易被人忽略的知识点</em></p>
</blockquote>
<p>首先，市面上的浏览器有很多，各家浏览器都有自己的解析渲染方式，一旦你的页面没有声明文档的解析类型，不同浏览器就会按各自默认的解析类型渲染页面，从而造成的结果就是同一个页面在不同浏览器上会显示不同的样式，尤其以臭名昭彰的IE浏览器最为辣眼睛。<br><a id="more"></a><br>如何准确地告知浏览器统一以W3C的标准方式渲染页面就是 &lt;!DOCTYPE&gt; 的用处了</p>
<h2 id="1-lt-DOCTYPE-gt-声明"><a href="#1-lt-DOCTYPE-gt-声明" class="headerlink" title="1. &lt;!DOCTYPE&gt; 声明"></a>1. <code>&lt;!DOCTYPE&gt;</code> 声明</h2><p>&lt;!DOCTYPE&gt; 不是一个 HTML 标签；它为浏览器提供一项信息（声明），即 HTML 是用什么版本编写的。<br>&lt;!DOCTYPE&gt; 声明没有结束标签。<br>&lt;!DOCTYPE&gt; 声明对大小写不敏感。<br> jsp的话，添加在&lt;%@ page %&gt;的下一行。<br>HTML5只有一种 &lt;!DOCTYPE&gt; 声明：<br><code>&lt;!DOCTYPE html&gt;</code><br>其他HTML4.01<br><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;
&quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</code><br>XHTML 1.0<br><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</code></p>
<h2 id="2-文档流-文本流"><a href="#2-文档流-文本流" class="headerlink" title="2. 文档流 / 文本流"></a>2. 文档流 / 文本流</h2><h3 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a>文档流</h3><p>原文是 “normal flow”, 中文翻译为”文档流“，有些误导人，指语言文本从左到右，从上到下显示，即是传统HTML文档的文本布局。</p>
<blockquote>
<p>浮动(float), 绝对定位（absolute), 固定定位(fixed)三种方式定位会脱离文档流。可以理解为类似图层的概念，脱离文档流的元素属于上一层，也不会占用之前的空间。</p>
</blockquote>
<h3 id="文本流"><a href="#文本流" class="headerlink" title="文本流"></a>文本流</h3><p>文档流是相当与盒子模型，文本流是相当与文字段落的。<br>元素浮动之后，如果后面还有其他元素会直接在它身下布局，但是文字却会认同浮动元素所占区域，围绕它布局；<br>元素绝对定位后，不仅元素盒子会脱离文档流，文字也会出文本流，那么后面元素的文本也会直接在它后面布局，不会环绕。</p>
<h2 id="3-绝对定位-相对定位"><a href="#3-绝对定位-相对定位" class="headerlink" title="3. 绝对定位 / 相对定位"></a>3. 绝对定位 / 相对定位</h2><h3 id="相对定位position-relative"><a href="#相对定位position-relative" class="headerlink" title="相对定位position: relative"></a>相对定位<code>position: relative</code></h3><ol>
<li>相对定位就是相对它自身原来的位置，通过<code>left</code>, <code>right</code>, <code>top</code>, <code>bottom</code> 指定偏移的距离进行定位，达到达到新的位置；</li>
<li>相对定位不会脱离文档流，所以元素本身所占的位置会保留。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div style=&quot; width:100px; height:100px; border:1px solid Red;&quot;&gt;div1&lt;/div&gt;</div><div class="line">&lt;div style=&quot; width:100px; height:100px; border:1px solid Green; position:relative; top:-20px; left:50px;&quot;&gt;div2&lt;/div&gt;</div><div class="line">&lt;div style=&quot; width:100px; height:100px; border:1px solid Blue;&quot;&gt;div3&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>效果对比图如下:</p>
<p><figure class="half"><br><img src="http://oummu6kih.bkt.clouddn.com/HTML-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E7%9B%B8%E5%AF%B9%E5%AE%9A%E4%BD%8D%E5%AF%B9%E6%AF%94%E5%9B%BE.png"><br><img src="http://oummu6kih.bkt.clouddn.com/HTML-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E7%9B%B8%E5%BD%93%E5%AE%9A%E4%BD%8D%E6%95%88%E6%9E%9C%E5%9B%BE.png"><br></figure><br>可以看到，div3并没有因为div2的上移而上移，因为相对定位并没有脱离文档流，div2所占的位置会保留。</p>
<h3 id="绝对定位position-absolute"><a href="#绝对定位position-absolute" class="headerlink" title="绝对定位position:absolute"></a>绝对定位<code>position:absolute</code></h3><p>废话不多说，直接上例子：<br>测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">        .absOut1&#123;</div><div class="line">            border: 1px solid Red;</div><div class="line">            padding: 10px;</div><div class="line">            height: 200px;</div><div class="line">            width: 200px;</div><div class="line">        &#125;</div><div class="line">        .absOut2&#123;</div><div class="line">            border: 1px solid Green;</div><div class="line">            padding: 10px;</div><div class="line">            height: 180px;</div><div class="line">            width: 180px;</div><div class="line">        &#125;</div><div class="line">        .absOut3&#123;</div><div class="line">            border: 1px solid Blue;</div><div class="line">            padding: 10px;</div><div class="line">            height: 160px;</div><div class="line">            width: 160px;</div><div class="line">        &#125;</div><div class="line">        .abs1&#123;</div><div class="line">            border: 1px solid Red;</div><div class="line">            height: 50px;</div><div class="line">            width: 50px;</div><div class="line">        &#125;</div><div class="line">        .abs2&#123;</div><div class="line">            background: yellow;</div><div class="line">            height: 50px;</div><div class="line">            width: 50px;</div><div class="line">        &#125;</div><div class="line">        .abs3&#123;</div><div class="line">        	border: 1px solid Blue;</div><div class="line">            height: 50px;</div><div class="line">            width: 50px;</div><div class="line">        &#125;</div><div class="line">    &lt;/style&gt;</div></pre></td></tr></table></figure></p>
<p>布局：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;absOut1&quot;&gt;</div><div class="line">	&lt;div class=&quot;absOut2&quot;&gt;</div><div class="line">		&lt;div class=&quot;absOut3&quot;&gt;</div><div class="line">			&lt;div class=&quot;abs1&quot;&gt;abs1&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs2&quot;&gt;abs2&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs3&quot;&gt;abs3&lt;/div&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>显示：<br><img src="http://oummu6kih.bkt.clouddn.com/HTML-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E5%AF%B9%E6%AF%94%E5%9B%BE.png"></p>
<ol>
<li>给absOut3设置 <code>position</code>, 对 abs2 绝对定位：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;absOut1&quot;&gt;</div><div class="line">	&lt;div class=&quot;absOut2&quot;&gt;</div><div class="line">		&lt;div class=&quot;absOut3&quot; style=&quot;position:relative;&quot;&gt;</div><div class="line">			&lt;div class=&quot;abs1&quot;&gt;abs1&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs2&quot;  style=&quot;position:absolute; left: 0px; top: 0px;&quot;&gt;abs2&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs3&quot;&gt;abs3&lt;/div&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>效果：<br><img src="http://oummu6kih.bkt.clouddn.com/HTML-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E6%95%88%E6%9E%9C%E5%9B%BE1.png"></p>
<ol>
<li>给absOut2设置 <code>position</code>, 对 abs2 绝对定位：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;absOut1&quot;&gt;</div><div class="line">	&lt;div class=&quot;absOut2&quot; style=&quot;position:relative;&quot;&gt;</div><div class="line">		&lt;div class=&quot;absOut3&quot;&gt;</div><div class="line">			&lt;div class=&quot;abs1&quot;&gt;abs1&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs2&quot;  style=&quot;position:absolute; left: 0px; top: 0px;&quot;&gt;abs2&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs3&quot;&gt;abs3&lt;/div&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>效果：<br><img src="http://oummu6kih.bkt.clouddn.com/HTML-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E6%95%88%E6%9E%9C%E5%9B%BE2.png"></p>
<ol>
<li>给absOut3，absOut2 均设置 <code>position</code>, 对 abs2 绝对定位：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;absOut1&quot;&gt;</div><div class="line">	&lt;div class=&quot;absOut2&quot; style=&quot;position:relative;&quot;&gt;</div><div class="line">		&lt;div class=&quot;absOut3&quot; style=&quot;position:relative;&quot;&gt;</div><div class="line">			&lt;div class=&quot;abs1&quot;&gt;abs1&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs2&quot;  style=&quot;position:absolute; left: 0px; top: 0px;&quot;&gt;abs2&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs3&quot;&gt;abs3&lt;/div&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>效果：<br><img src="http://oummu6kih.bkt.clouddn.com/HTML-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E6%95%88%E6%9E%9C%E5%9B%BE3.png"></p>
<ol>
<li>父元素不设置 <code>position</code>, 对 abs2 绝对定位：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;absOut1&quot;&gt;</div><div class="line">	&lt;div class=&quot;absOut2&quot;&gt;</div><div class="line">		&lt;div class=&quot;absOut3&quot;&gt;</div><div class="line">			&lt;div class=&quot;abs1&quot;&gt;abs1&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs2&quot;  style=&quot;position:absolute; left: 0px; top: 0px;&quot;&gt;abs2&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;abs3&quot;&gt;abs3&lt;/div&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>效果：<br><img src="http://oummu6kih.bkt.clouddn.com/HTML-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E6%95%88%E6%9E%9C%E5%9B%BE4.png"><br>由此可见，绝对定位</p>
<ol>
<li>使用绝对定位的元素以它的最近的一个已经定位的祖先元素为参考进行定位的；</li>
<li>没有已经定位的祖先元素，以浏览器窗口为参考进行定位；</li>
<li>绝对定位会使元素脱离文档流，这意味着其他元素会无视绝对定位元素的存在；<blockquote>
<p>所谓已经定位的祖先元素可以理解为： <code>position</code>属性被设置, 且不能为 <code>static</code>, 即 <code>position</code> 可以是 <code>absolute</code>, 可以是 <code>relative</code>, 但不可以是 <code>static</code>, </p>
</blockquote>
</li>
</ol>
<h2 id="4-块级元素-行内元素"><a href="#4-块级元素-行内元素" class="headerlink" title="4. 块级元素 / 行内元素"></a>4. 块级元素 / 行内元素</h2><h3 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h3><ul>
<li>独立成行</li>
<li>占据一个矩形区域</li>
<li>块级元素会影响页面的布局</li>
<li>常见元素有 <code>&lt;h&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;div&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;table&gt;</code>, <code>&lt;form&gt;</code><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3></li>
<li>不独立成行，可以横向布局</li>
<li>不占据一个矩形区域</li>
<li>行内元素不会影响页面布局</li>
<li>常见元素有 <code>&lt;span&gt;</code>, <code>&lt;i&gt;</code>, <code>&lt;u&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;br&gt;</code>, <code>&lt;em&gt;</code>,  <code>&lt;img&gt;</code>, <code>&lt;input&gt;</code>, <code>&lt;label&gt;</code>, <code>&lt;select&gt;</code>,</li>
</ul>
]]></content>
      
        <categories>
            
            <category> HTML基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/08/12/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杂 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第一篇文章]]></title>
      <url>/2017/06/18/my-new-post/</url>
      <content type="html"><![CDATA[<h5 id="任意目录下打开DOS窗口"><a href="#任意目录下打开DOS窗口" class="headerlink" title="任意目录下打开DOS窗口"></a>任意目录下打开DOS窗口</h5><ul>
<li>按住Shift右键—-在此处打开命令窗口<h5 id="常见DOS命令"><a href="#常见DOS命令" class="headerlink" title="常见DOS命令"></a>常见DOS命令</h5></li>
<li>盘符切换—-d: 回车</li>
<li>列出当前目录文件或目录—-dir</li>
<li>创建目录—-md 目录名</li>
<li>删除目录—-rd 目录名</li>
<li>删除不为空的目录—-rd /s 目录名 或 rd /s /q 目录名</li>
<li>返回到根目录—-cd\ 回车</li>
<li>删除文件—-del 文件名</li>
<li>清屏—-cls 回车</li>
<li>退出—-exit<a id="more"></a>
<h5 id="JDK、JRE、JVM关系"><a href="#JDK、JRE、JVM关系" class="headerlink" title="JDK、JRE、JVM关系"></a>JDK、JRE、JVM关系</h5></li>
<li>JDK （Java Development Kit Java开发工具包）</li>
<li>JRE （Java Runtime Environment Java运行环境）</li>
<li>JVM （Java Virtual Machine Java虚拟机）</li>
<li>JDK包括JRE，JRE包括JVM</li>
</ul>
]]></content>
      
        <categories>
            
            <category> JAVA基础 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
